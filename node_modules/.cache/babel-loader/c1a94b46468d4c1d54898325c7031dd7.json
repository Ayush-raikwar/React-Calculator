{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ayush\\\\OneDrive\\\\desktop\\\\docs\\\\calculator\\\\calculator\\\\src\\\\components\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ResultArea from \"./ResultArea\";\nimport ClearArea from \"./ClearArea\";\nimport Operators from \"./Operators\";\nimport Numbers from \"./Numbers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [user_input, setstate] = useState(\"\");\n\n  let getUserInput = valNum => {\n    setstate(user_input + \"\" + valNum);\n  };\n\n  function getOperator(operatorVal) {\n    if (user_input.charAt(user_input.length - 1) === operatorVal) {\n      console.log(user_input);\n    } else {\n      setstate(user_input + operatorVal);\n    }\n  }\n\n  function clearAll() {\n    setstate(\"\");\n  }\n\n  function compute() {\n    const lastChar = user_input.charAt(user_input.length - 1);\n\n    if (lastChar === \"+\" || lastChar === \"-\" || lastChar === \"/\" || lastChar === \"*\") {\n      console.log(\"Enter operand\");\n    } else {\n      console.log(user_input.search(\"+\" || \"-\" || \"/\" || \"*\"));\n      setstate(eval(user_input));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-div\",\n    children: [/*#__PURE__*/_jsxDEV(ResultArea, {\n      userInput: user_input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClearArea, {\n      clear: clearAll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Operators, {\n      getOperatorAction: getOperator,\n      callEquate: compute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Numbers, {\n      getUserInputAction: getUserInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tDArM5ouJtSpDThK4icKc/PRWxs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ayush/OneDrive/desktop/docs/calculator/calculator/src/components/App.jsx"],"names":["React","useState","ResultArea","ClearArea","Operators","Numbers","App","user_input","setstate","getUserInput","valNum","getOperator","operatorVal","charAt","length","console","log","clearAll","compute","lastChar","search","eval"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,SAASC,GAAT,GAAc;AAAA;;AAEV,QAAM,CAACC,UAAD,EAAYC,QAAZ,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AAEA,MAAIQ,YAAY,GAAIC,MAAD,IAAY;AAC3BF,IAAAA,QAAQ,CAACD,UAAU,GAAC,EAAX,GAAcG,MAAf,CAAR;AAEH,GAHD;;AAKA,WAASC,WAAT,CAAqBC,WAArB,EAAiC;AAI7B,QAAGL,UAAU,CAACM,MAAX,CAAkBN,UAAU,CAACO,MAAX,GAAkB,CAApC,MAAyCF,WAA5C,EAAwD;AACpDG,MAAAA,OAAO,CAACC,GAAR,CAAYT,UAAZ;AACH,KAFD,MAEM;AACFC,MAAAA,QAAQ,CAACD,UAAU,GAACK,WAAZ,CAAR;AAEH;AAGJ;;AAED,WAASK,QAAT,GAAmB;AACfT,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;;AAED,WAASU,OAAT,GAAkB;AAEd,UAAMC,QAAQ,GAAGZ,UAAU,CAACM,MAAX,CAAkBN,UAAU,CAACO,MAAX,GAAkB,CAApC,CAAjB;;AACA,QAAGK,QAAQ,KAAG,GAAX,IAAkBA,QAAQ,KAAG,GAA7B,IAAoCA,QAAQ,KAAG,GAA/C,IAAsDA,QAAQ,KAAG,GAApE,EAAwE;AACpEJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH,KAFD,MAEM;AACFD,MAAAA,OAAO,CAACC,GAAR,CAAYT,UAAU,CAACa,MAAX,CAAkB,OAAO,GAAP,IAAc,GAAd,IAAqB,GAAvC,CAAZ;AACAZ,MAAAA,QAAQ,CAACa,IAAI,CAACd,UAAD,CAAL,CAAR;AAEH;AAEJ;;AAED,sBACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAY,MAAA,KAAK,EAAEU;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,iBAAiB,EAAEN,WAA9B;AAA2C,MAAA,UAAU,EAAEO;AAAvD;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,OAAD;AAAU,MAAA,kBAAkB,EAAET;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAQH;;GAhDQH,G;;KAAAA,G;AAkDT,eAAeA,GAAf","sourcesContent":["\r\nimport React, { useState } from \"react\";\r\nimport ResultArea from \"./ResultArea\";\r\nimport ClearArea from \"./ClearArea\";\r\nimport Operators from \"./Operators\";\r\nimport Numbers from \"./Numbers\";\r\n\r\nfunction App(){\r\n\r\n    const [user_input,setstate] = useState(\"\");\r\n\r\n    let getUserInput = (valNum) => {\r\n        setstate(user_input+\"\"+valNum);\r\n        \r\n    }\r\n\r\n    function getOperator(operatorVal){\r\n        \r\n       \r\n     \r\n        if(user_input.charAt(user_input.length-1)===operatorVal){\r\n            console.log(user_input);\r\n        } else{\r\n            setstate(user_input+operatorVal);\r\n\r\n        }\r\n     \r\n\r\n    }\r\n\r\n    function clearAll(){\r\n        setstate(\"\");\r\n    }\r\n    \r\n    function compute(){\r\n        \r\n        const lastChar = user_input.charAt(user_input.length-1);\r\n        if(lastChar===\"+\" || lastChar===\"-\" || lastChar===\"/\" || lastChar===\"*\"){\r\n            console.log(\"Enter operand\");\r\n        } else{\r\n            console.log(user_input.search(\"+\" || \"-\" || \"/\" || \"*\"));\r\n            setstate(eval(user_input))\r\n       \r\n        }\r\n         \r\n    }\r\n\r\n    return (\r\n    <div className=\"main-div\">\r\n        <ResultArea userInput={user_input} />\r\n        <ClearArea  clear={clearAll} />\r\n        <Operators getOperatorAction={getOperator} callEquate={compute} />\r\n        <Numbers  getUserInputAction={getUserInput}  />\r\n      \r\n    </div>);\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}